# B5.2. Переменные и типы данных

L = ['a', 'b', 'c']
print(id(L))

L.append('d')
print(id(L))

a = 5
b = 3+2

print(id(a))
print(id(b))

print('Задание 5.2.5')
# Используя цикл while, найдите первое целое число, которое не кешируется в памяти.
a = 1
b = 1
while id(a) == id(b):
    a += 1
    b += 1
print('Число, которое не кешируется', a)

print('Задание 5.2.7')
# Модифицируйте алгоритм из предыдущей задачи, чтобы найти первое отрицательное число, не хранящееся в кеше. Какое число получилось здесь?
a = -1
b = -1
while id(a) == id(b):
    a -= 1
    b -= 1
print('Число, которое не кешируется', a)

c = 123456789
d = 123456789

print(c == d)
print(c is d)

print('Задание 5.2.8')
# Впишите вместо знаков «?» операцию сравнения идентификаторов списков до и после обновления, чтобы программа
# распечатала True, если они равны, иначе — False

shopping_center = ("Галерея", "Санкт-Петербург", "Лиговский пр., 30", ["H&M", "Zara"])
list_id_before = id(shopping_center[-1])
print('`list_id_before:', list_id_before)

shopping_center[-1].append('Uniglo')
list_id_after = id(shopping_center[-1])
print('`list_id_after: ', list_id_before)
print('\n', list_id_before == list_id_after)

print('Задание 5.2.9. Напишите программу, которая на вход принимает текст и выводит количество уникальных символов.')

#st = 'авгдейка где то смотрит в окно Миши'
st = "Введите текст:"
#unique = list(set(st.replace(' ', '').lower()))
unique = list(set(st))

print("Количество уникальных символов: ", len(unique))
print('\n', unique)

print('Задание 5.2.10. Используя алгоритм из прошлой задачи, найдите количество уникальных символов в предложении.')
s = 'The Zen of Python'
uniqueq = list(set(s))
print('Число уникальных символов: ', len(uniqueq))

# ---------------------- Задание 5.2.11. ------------------------------------------
print('Задание 5.2.11. Найдите ошибку в коде и запишите исправленную строку полностью в форму ответа. '
      'Представленная ниже программа должна находить множество символов, которые встречаются в двух строках одновременно..')


a = "Введите первую строку: "
b = "Введите вторую строку: "

a_set, b_set = set(a), set(b) # используем множественное присваивание

a_and_b = a_set.intersection(b_set)

print(a_and_b)
# ---------------------- Задание 5.2.12. ------------------------------------------
print('\n','Задание 5.2.12. Напишите программу, которая на вход получает две последовательности целых чисел, '
           'а возвращает список, в котором нет одинаковых элементов, встречающихся одновременно в обеих последовательностях.')

a = "123456789"
b = "245670"

a_set, b_set = set(a), set(b) # используем множественное присваивание

symm = a_set.symmetric_difference(b_set)
print(symm)

# -----------------  проверка ------------------------
print('\n', 'Напишите числа в порядке возрастания через пробел, которые выведет программа из предыдущего задания, '
            'если на вход подаются две последовательности чисел')
q1 = '1 2 3 4 5 6 7 8 9'
q2 = '2 4 5 6 7 0'

q1_set, q2_set = set(q1), set(q2) # используем множественное присваивание
sym_ = sorted(list(q1_set.symmetric_difference(q2_set)))
print(sym_)