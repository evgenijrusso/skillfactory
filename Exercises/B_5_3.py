# B5.3. Условия и циклы
some_var = (2,)
print(type(some_var))
a = None
b = a or 1
print('or: ', b)

print('and: ', 42 and 0 and '' and False)

#  =================   Один и тот же вариант ====================

if a is None:
    b = 1
else:
    b = a

# and: если все операнды являются истинными (ненулевые или непустые), то возвращается последнее истинное значение.
# and: если один из операндов является ложным, то возвращается первый такой операнд.
# or: если один из операндов является истинным, то возвращается первый такой операнд, а остальные игнорируются.
# or: если все операнды являются ложными, то возвращается последний
b = a if a is not None else 1
b = a or 1

print('Задание 5.3.4')
a = 'foo'
b = 'bar'
print(1 and a or b)


print('Задание 5.3.5. Что выведет программа?')

a = ""
b = "bar"

print(1 and a or b)


print('Задание 5.3.6. Замените знаки «?» корректным выражением')
# пусть a и b - переменные, которые мы хотим проверить
a = 1
b = 2

if a and b : # проверка истинности обеих переменных
    print("Обе переменные истинные")
    print(a,b)
else:
    print("Одна из переменных ложная")
    print(a, b)


print('Задание 5.3.7. Замените знаки «?» корректным выражением')
# пусть a и b - переменные, которые мы хотим проверить
az = 0
bz = 2

if az and bz:
    print("Обе переменные истинные")
    print(az, bz)
elif az or bz:
    print("Одна из переменных интинная")
    print(az or bz)

print('Задание 5.3.8 Программа должна выводить «Обе переменные ложные», если они являются таковыми. '
      'Дополните условный оператор последним блоком.')

c = 0
d = None

if c and d:
    print("Обе переменные истинные")
    print(c, d)
elif c or d:
    print("Одна из переменных интинная")
    print(c or d)
else:
    print("Обе ложных")
    print(c or d)

# Напишите алгоритм, реализованный с помощью вложенных условных операторов, который проверяет заданные выше условия.
print('Задание 5.3.9')
# на вход нашей программы подаётся число.А мы хотим проверить, является ли оно целым, находится ли в определённом
# промежутке(например, от 100 до 999 включительно), да ещё и делится ли на 2 и 3 одновременно.

n =102
if type(n) == int:
    if 100 <= n <= 999:
        if n % 2 == 0:
            if n % 3 == 0:
                print('подходит:', n)

w = 108
if all([type(w)==int,
    100 <= w <= 999,
    w % 2 == 0,
    w % 3 == 0]):
    print("Число удовлетворяет условиям", w)

# Напишите программу, которая на вход принимает последовательность целых чисел и возвращает True, если все числа
# ненулевые, и False, если хотя бы одно число равно 0.
# L = list(map(int, input().split()))
print('Задание 5.3.11')
intel = [10, 5, 1]
print("intel: ", all(intel))

print('Задание 5.3.12')
#Напишите программу, которая на вход принимает последовательность целых чисел и возвращает True, если все числа равны
# нулю, и False, если найдётся хотя бы одно ненулевое число. Разрешается использование только логических операторов
# и функций all([ ]) и any([ ]).

mass = [0, 10]
print("mass: ", not any(mass))

# List comprehension